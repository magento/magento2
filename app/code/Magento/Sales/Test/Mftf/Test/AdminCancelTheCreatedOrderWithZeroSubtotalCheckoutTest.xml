<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCancelTheCreatedOrderWithZeroSubtotalCheckoutTest">
        <annotations>
            <group value="Sales"/>
            <stories value="Cancel Created Order"/>
            <title value="Cancel the created order with zero subtotal checkout"/>
            <description value="Create an order with Zero Subtotal checkout and cancel the order"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-16067"/>
            <group value="mtf_migrated"/>
            <group value="cloud"/>
        </annotations>

        <before>
            <!--Enable flat rate shipping-->
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>
            <!-- Enable Zero Subtotal Checkout -->
            <magentoCLI command="config:set {{EnableZeroSubtotalCheckoutConfigData.path}} {{EnableZeroSubtotalCheckoutConfigData.value}}" stepKey="enableZeroSubtotalCheckout"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!--Set Free shipping method settings-->
            <createData entity="FreeShippingMethodsSettingConfig" stepKey="freeShippingMethodsSettingConfig"/>

            <!--Create simple customer-->
            <createData entity="Simple_US_Customer_CA" stepKey="simpleCustomer"/>

            <!-- Create Simple Product -->
            <createData entity="SimpleProduct2" stepKey="simpleProduct">
                <field key="price">10.00</field>
            </createData>

            <!-- Create a sales rule with fixed discount -->
            <createData entity="SalesRuleNoCouponWithFixedDiscount" stepKey="createSalesRule"/>
        </before>
        <after>
            <!-- Disable shipping method for customer with default address -->
            <comment userInput="config:set DisableFlatRateConfigData.path DisableFlatRateConfigData.value" stepKey="disableFlatRate"/>
            <!-- Disable Free Shipping -->
            <createData entity="DefaultShippingMethodsConfig" stepKey="defaultShippingMethodsConfig"/>
            <createData entity="DisableFreeShippingConfig" stepKey="disableFreeShippingConfig"/>
            <deleteData createDataKey="createSalesRule" stepKey="deleteSalesRule"/>
            <deleteData createDataKey="simpleCustomer" stepKey="deleteSimpleCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!--Create new customer order-->
        <actionGroup ref="AdminNavigateToNewOrderPageExistingCustomerActionGroup" stepKey="navigateToNewOrderWithExistingCustomer">
            <argument name="customer" value="$$simpleCustomer$$"/>
        </actionGroup>

        <!--Add Simple product to order-->
        <actionGroup ref="AddSimpleProductToOrderActionGroup" stepKey="addSimpleProductToTheOrder">
            <argument name="product" value="$$simpleProduct$$"/>
        </actionGroup>

        <!--Select FlatRate shipping method-->
        <actionGroup ref="AdminSelectFlatRateShippingMethodActionGroup" stepKey="selectFlatRateShippingMethod"/>
        <actionGroup ref="AdminOrderClickSubmitOrderActionGroup" stepKey="submitOrder" />

        <!-- Start the consumer -->
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="startMessageQueue">
            <argument name="consumerName" value="{{SalesRuleConsumerData.consumerName}}"/>
            <argument name="maxMessages" value="{{SalesRuleConsumerData.messageLimit}}"/>
        </actionGroup>

        <!--Verify order information-->
        <actionGroup ref="VerifyCreatedOrderInformationActionGroup" stepKey="verifyCreatedOrderInformation"/>
        <actionGroup ref="ReloadPageActionGroup" stepKey="refreshPage"/>
        <comment userInput="BIC workaround" stepKey="orderId"/>
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderNumber"/>

        <!-- Refresh the page -->
        <actionGroup ref="ReloadPageActionGroup" stepKey="refreshPageAgain"/>

        <!-- Cancel the Order -->
        <actionGroup ref="CancelPendingOrderActionGroup" stepKey="cancelPendingOrder"/>

        <!--Log in to Storefront as Customer  -->
        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="signUp">
            <argument name="Customer" value="$$simpleCustomer$$"/>
        </actionGroup>

        <!-- Assert Order status in frontend grid -->
        <click selector="{{StorefrontCustomerSidebarSection.sidebarCurrentTab('My Orders')}}" stepKey="clickOnMyOrders"/>
        <waitForPageLoad stepKey="waitForOrderDetailsToLoad"/>
        <actionGroup ref="AdminCheckOrderStatusInGridActionGroup" stepKey="seeOrderStatusInGrid">
            <argument name="orderId" value="$orderNumber"/>
            <argument name="status" value="Canceled"/>
        </actionGroup>
    </test>
</tests>
