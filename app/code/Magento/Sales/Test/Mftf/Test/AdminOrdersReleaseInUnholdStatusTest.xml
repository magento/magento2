<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminOrdersReleaseInUnholdStatusTest">
        <annotations>
            <stories value="Mass Update Orders"/>
            <title value="Release order in status On Hold"/>
            <description value="Release order in status On Hold"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-16187"/>
            <group value="sales"/>
            <group value="mtf_migrated"/>
            <group value="cloud"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>

            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="defaultSimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="CustomerCart" stepKey="createCustomerCart">
                <requiredEntity createDataKey="createCustomer"/>
            </createData>
            <createData entity="CustomerCartItem" stepKey="addCartItemOne">
                <requiredEntity createDataKey="createCustomerCart"/>
                <requiredEntity createDataKey="createProduct"/>
            </createData>
            <createData entity="CustomerAddressInformation" stepKey="addCustomerOrderAddress">
                <requiredEntity createDataKey="createCustomerCart"/>
            </createData>
            <updateData createDataKey="createCustomerCart" entity="CustomerOrderPaymentMethod" stepKey="sendCustomerPaymentInformationOne">
                <requiredEntity createDataKey="createCustomerCart"/>
            </updateData>
            <createData entity="HoldOrder" stepKey="holdOrder">
                <requiredEntity createDataKey="createCustomerCart"/>
            </createData>
        </before>
        <after>
            <actionGroup ref="StorefrontCustomerLogoutActionGroup" stepKey="logoutCustomer" />
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="createFirstOrder"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="getOrderId"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="assertOrderIdIsNotEmpty"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="pushButtonHold"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForHold"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="seeHoldMessage"/>

        <actionGroup ref="AdminOrdersPageOpenActionGroup" stepKey="onOrderPage"/>
        <actionGroup ref="AdminOrdersGridClearFiltersActionGroup" stepKey="clearFilters"/>
        <grabTextFrom selector="{{AdminOrdersGridSection.orderIdByIncrementId($createCustomerCart.return$)}}" stepKey="grabOrderId"/>
        <actionGroup ref="AdminOrderBulkActionForOrderOnGridActionGroup" stepKey="actionUnold">
            <argument name="action" value="Unhold"/>
            <argument name="orderId" value="$grabOrderId"/>
        </actionGroup>
        <see userInput="1 order(s) have been released from on hold status." stepKey="assertOrderReleaseSuccessMessage"/>

        <actionGroup ref="AdminOrderFilterByOrderIdAndStatusActionGroup" stepKey="seeFirstOrder">
            <argument name="orderId" value="{$grabOrderId}"/>
            <argument name="orderStatus" value="Pending"/>
        </actionGroup>
        <see userInput="{$grabOrderId}" selector="{{AdminOrdersGridSection.gridCell('1','ID')}}" stepKey="assertOrderID"/>
        <see userInput="Pending" selector="{{AdminOrdersGridSection.gridCell('1','Status')}}" stepKey="assertOrderStatus"/>
    </test>
</tests>
