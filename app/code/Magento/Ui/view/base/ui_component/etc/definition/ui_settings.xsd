<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright © Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <!-- Include section -->
    <xs:redefine schemaLocation="urn:magento:framework:View/Layout/etc/elements.xsd">
        <xs:complexType name="argumentType" abstract="true" mixed="true">
            <xs:annotation>
                <xs:documentation>
                    Abstract element for configuring an arbitrary structure.
                </xs:documentation>
            </xs:annotation>
            <xs:complexContent>
                <xs:extension base="argumentType">
                    <xs:attribute name="active" type="xs:boolean" use="optional"/>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:redefine>

    <!-- Simple types -->

    <xs:simpleType name="referenceAttributeType">
        <xs:annotation>
            <xs:documentation>
                The value should only be {[a-z_-]+} since it is used as a reference to a database field.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[a-z_-]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textAttributeType">
        <xs:annotation>
            <xs:documentation>
                Any text value.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[A-Za-z0-9,_.\\: -]+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="formElementType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="hidden"/>
                    <xs:enumeration value="file"/>
                    <xs:enumeration value="input"/>
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="boolean"/>
                    <xs:enumeration value="checkbox"/>
                    <xs:enumeration value="checkboxset"/>
                    <xs:enumeration value="email"/>
                    <xs:enumeration value="select"/>
                    <xs:enumeration value="multiselect"/>
                    <xs:enumeration value="text"/>
                    <xs:enumeration value="textarea"/>
                    <xs:enumeration value="price"/>
                    <xs:enumeration value="radioset"/>
                    <xs:enumeration value="wysiwyg"/>
                </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[a-zA-Z]+"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="sortingType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="asc"/>
                    <xs:enumeration value="desc"/>
                    <xs:enumeration value="false"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!-- Attributes -->

    <xs:attribute name="name" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Element's index in the scope of the current collection that will be used to build its unique identifier
                (name).
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="class" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Path to the PHP class responsible for the backend implementation of the component.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="provider" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Reference to component.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="sortOrder" type="xs:integer">
        <xs:annotation>
            <xs:documentation>
                Element's position in the collection
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="displayArea" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Renders the component in the location that was declared in the layout.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="extends" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Extends configuration from specified component.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="template" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                The path to the component’s ".html" template.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="formElement" type="formElementType" default="input">
        <xs:annotation>
            <xs:documentation>
                Form Element.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="component" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                The path to the component’s ".js" file in terms of RequireJS.
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:attribute name="dataScope" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                ...
            </xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <!-- Elements -->

    <xs:element name="elementTmpl" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                The path to the child component’s ".html" template.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="additionalClasses">
        <xs:annotation>
            <xs:documentation>
                Set custom classes to the component's DOM block.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element name="class" type="classType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="options">
        <xs:complexType>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element name="option" type="argumentType"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="optionsType">
        <xs:annotation>
            <xs:documentation>
                The array of the options to be displayed in the list for selection.
            </xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="option" type="argumentType"/>
        </xs:choice>
        <xs:attribute name="class" use="optional">
            <xs:annotation>
                <xs:documentation>
                    Path to the PHP class that provides options.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="urlsType">
        <xs:annotation>
            <xs:documentation>
                The array of the configuration for urls types to be displayed in the list for selection.
            </xs:documentation>
        </xs:annotation>

    </xs:complexType>

    <xs:element name="param" type="argumentType"/>

    <xs:element name="multiple" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Renders multiple elements.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="visible" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Initial component's visibility.
                When set to "false", the "display: none" CSS style is added to the component's DOM block.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="disabled" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Initial component's state. When set to "true", users can't take action on the element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="filter" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Holds a reference to one of the available filter types defined in the "Filters" component.
                If the value represents an object containing the "filterType" field, this object is considered as
                an extension of the referenced filter element.
                If there's no such field in the value object, it is considered as a definition of a custom filter
                element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="title" type="translatableString">
        <xs:annotation>
            <xs:documentation>
                Button title.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="columnsProvider" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Provides columns by referencing to the name of the Listing component instance.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="indexField" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                This option allows to specify which field represents record identifier.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="subTitle" type="translatableString">
        <xs:annotation>
            <xs:documentation>
                Subtitle of the modal window.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="modalClass" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                CSS class applied to the root node of the component's ".html" template.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="onCancel" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Name of the method invoked when a user attempts to close the modal window.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="headerTmpl" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Path to the ".html" template for the column's header.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="renderUrl" type="urlType">
        <xs:annotation>
            <xs:documentation>
                With default render_url(mui/index/render) form will be without form buttons.
                To get Form with buttons, url must be changed to mui/index/render_handle and next GET parameters:
                 - buttons=1 (flag to get buttons)
                 - handle=%layout namespace%/ (buttons scope)
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="updateUrl" type="urlType">
        <xs:annotation>
            <xs:documentation>
                Where the AJAX request will go to retrieve, foster component update data.
                It will be in json format by default and will be automatically set into externalProvider.data
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="bodyTmpl" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Path to the ".html" template used to render a column's field in the table's body.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="controlVisibility" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Whether a user can control column's visibility handled by the "ColumnsControls" component.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="sortable" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Whether column's fields can be used to sort records in a table.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="draggable" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>
                Defines if a user can change column's position in the table by grabbing column's header and dragging it
                across the table.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="fieldClass" type="fieldClassType">
        <xs:annotation>
            <xs:documentation>
                Additional CSS classes added to the column's field elements.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="label" type="translatableString">
        <xs:annotation>
            <xs:documentation>
                Caption for an item in the UI component context.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="addBefore" type="translatableString">
        <xs:annotation>
            <xs:documentation>
                Content added before form element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="addAfter" type="translatableString">
        <xs:annotation>
            <xs:documentation>
                Content added after form element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="scopeLabel" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Adds configuration scope indicator to the field (i.e. [global],[website],[store view]).
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="disableAction" type="xs:boolean" default="false">
        <xs:annotation>
            <xs:documentation>
                Disables the action set in the "templates.fieldAction" property.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="statefull" type="statefullType">
        <xs:annotation>
            <xs:documentation>
                Defines a list of component properties whose values are automatically saved in the configured storage
                if they change.
                "key" is the property's name and the "value" defines whether its saved.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="editor" type="editorType">
        <xs:annotation>
            <xs:documentation>
                Configuration of the InlineEditing component.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="spinner" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Links the index of UI component instance (i.g. Columns) with the loading indicator.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="buttons">
        <xs:annotation>
            <xs:documentation>
                Page main buttons configuration.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="button">
                    <xs:complexType>
                        <xs:choice minOccurs="0" maxOccurs="unbounded">
                            <xs:element ref="label"/>
                            <xs:element name="class" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>
                                        CSS class name for the button element.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="url" type="urlType">
                                <xs:annotation>
                                    <xs:documentation>
                                        Path to the controller responsible for action handling.
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element name="aclResource" type="xs:string" minOccurs="0" maxOccurs="1">
                                <xs:annotation>
                                    <xs:documentation>
                                        ACL Resource used to validate access to UI Component data
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:element>
                            <xs:element ref="param"/>
                        </xs:choice>
                        <xs:attribute name="name" type="xs:string" use="required">
                            <xs:annotation>
                                <xs:documentation>
                                    Name of the button element.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                        <xs:attribute name="class" type="xs:string" use="optional">
                            <xs:annotation>
                                <xs:documentation>
                                    Path to the PHP class responsible for the backend implementation of the button.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:attribute>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:element name="sorting" type="sortingType">
        <xs:annotation>
            <xs:documentation>
                Indicates sorting direction of column's fields. It can be ascending (asc), descending (desc) or disabled
                (false).
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="dataType" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Type of data
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="selectProvider" type="xs:string">
        <xs:annotation>
            <xs:documentation>
                Defines the name of component that provides selections data.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="cols" type="xs:integer">
        <xs:annotation>
            <xs:documentation>
                The number of columns that will be specified in the "cols" attribute of the textarea DOM
                element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="rows" type="xs:integer">
        <xs:annotation>
            <xs:documentation>
                The number of columns that will be specified in the "rows" attribute of the textarea DOM
                element.
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <!-- Complex types -->

    <xs:complexType name="classType">
        <xs:simpleContent>
            <xs:extension base="xs:boolean">
                <xs:attribute name="name" use="required" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="namedString">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="translatableString">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="translate" use="optional" type="xs:boolean"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="filterType">
        <xs:choice>
            <xs:element ref="param"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="urlType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="param">
                <xs:complexType mixed="true">
                    <xs:attribute name="name" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
        <xs:attribute name="path" use="required"/>
    </xs:complexType>

    <xs:complexType name="statefullType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="property" type="argumentType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="fieldClassType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="class" type="classType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="paramType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element ref="param"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="editorType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element ref="param"/>
            <xs:element name="validation" type="validationType"/>
            <xs:element name="editorType" type="xs:string"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="linksType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="link" type="linkType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="exportsType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="link" type="linkType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="urlTypes">
        <xs:annotation>
            <xs:documentation>
                The array of the configuration for urls types to be displayed in the list for selection.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="class" use="required" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    Path to the PHP class that provides configuration.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="listensType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="link" type="linkType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="importsType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="link" type="linkType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="linkType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="active" use="optional" type="xs:boolean"/>
                <xs:attribute name="name" use="required" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="depsType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="dep">
                <xs:complexType>
                    <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute name="active" use="optional" type="xs:boolean"/>
                        </xs:extension>
                    </xs:simpleContent>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="validationType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="rule" type="argumentType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="switcherConfigType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="component" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The path to switcher .js file
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="target" type="xs:string"/>
            <xs:element name="property" type="xs:string"/>
            <xs:element name="enabled" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Whether to render additional switcher
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="argument" type="argumentType"/>
            <xs:element name="rules" type="switcherConfigRulesType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="switcherConfigRulesType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="rule">
                <xs:complexType>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="value" maxOccurs="1" type="xs:string"/>
                        <xs:element name="actions" maxOccurs="1">
                            <xs:complexType>
                                <xs:choice minOccurs="1" maxOccurs="unbounded">
                                    <xs:element name="action" type="actionItemType"/>
                                </xs:choice>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                    <xs:attribute name="name" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="actionItemType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="target" type="xs:string" maxOccurs="1"/>
            <xs:element name="callback" type="xs:string" maxOccurs="1"/>
            <xs:element name="params" type="paramType" maxOccurs="1"/>
        </xs:choice>
        <xs:attribute name="name" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- Groups -->

    <xs:group name="collapsibleSettings">
        <xs:choice>
            <xs:element name="opened" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Initial collapsible state, if the collapsible functionality is enabled.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="collapsible" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Enables/disables the "collapsible" functionality.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="configurable">
        <xs:choice>
            <xs:element name="argument" type="argumentType" minOccurs="0" maxOccurs="unbounded">
                <xs:key name="configurableArgumentItemName">
                    <xs:selector xpath="item"/>
                    <xs:field xpath="@name"/>
                </xs:key>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="dictionaryComponentProperties">
        <xs:choice>
            <xs:element ref="disabled" minOccurs="0"/>
            <xs:element ref="visible" minOccurs="0"/>
            <xs:element ref="additionalClasses" minOccurs="0"/>
            <xs:element ref="statefull" minOccurs="0"/>
        </xs:choice>
    </xs:group>

    <xs:group name="componentsCommunication">
        <xs:choice>
            <xs:element name="imports" type="importsType" minOccurs="0"/>
            <xs:element name="exports" type="exportsType" minOccurs="0"/>
            <xs:element name="links" type="exportsType" minOccurs="0"/>
        </xs:choice>
    </xs:group>

    <xs:group name="uiElementSettings">
        <xs:choice>
            <xs:element ref="statefull" minOccurs="0"/>
            <xs:element name="imports" type="importsType">
                <xs:annotation>
                    <xs:documentation>
                        Used for tracking changes of an external entity property.
                        "imports’s" value is an object, composed of the following:
                        - "key": name of the internal property or method which receives the notifications.
                        - "value": name of the property or method which is tracked for changes. Can use string
                        templates.

                        For more details see the "Linking properties of UI components" topic.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="exports" type="exportsType">
                <xs:annotation>
                    <xs:documentation>
                        Used to notify some external entity about property changing.
                        "exports" value is an object, composed of the following:
                        - "key": name of the internal property or method which is tracked for changes.
                        - "value": name of the property or method which receives the notification. Can use string
                        templates.

                        For more details see the "Linking properties of UI components" topic.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="links" type="linksType">
                <xs:annotation>
                    <xs:documentation>
                        Breaks the link established in the "link" property of the parent (abstract) component.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="listens" type="listensType">
                <xs:annotation>
                    <xs:documentation>
                        The "listens" property is used to track the changes of a component's property.
                        "listens's" value is an object, composed of the following:
                        - "key": name of the internal property which listens to the changes.
                        - "value": name of the property or method which is tracked for changes.
                        Can use string templates.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="deps" type="depsType">
                <xs:annotation>
                    <xs:documentation>
                        Sets the dependency on component initialization
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="ns" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Namespace of the inserted form.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="componentType" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Additional property used to define the type of component.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="dataScope" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        Relative path to the component's data defined in the form of a dot-separated string.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="storageConfig">
                <xs:annotation>
                    <xs:documentation>
                        Configuration of the object that stores component's meta-data.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="provider" type="xs:string"/>
                        <xs:element name="namespace" type="xs:string"/>
                        <xs:element name="path" type="urlType"/>
                        <xs:element ref="param"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="uiCollectionSettings">
        <xs:choice>
            <xs:group ref="uiElementSettings"/>
            <xs:element name="childDefaults" type="paramType">
                <xs:annotation>
                    <xs:documentation>
                        Used to set the children defaults:
                        properties from "childDefaults" are set into child elements’ defaults property.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:choice>
    </xs:group>

    <xs:group name="abstractSettings">
        <xs:choice>
            <xs:group ref="uiElementSettings"/>
            <xs:element ref="additionalClasses" minOccurs="0"/>
            <xs:element ref="label" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>
                        Form field label.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element ref="addBefore" minOccurs="0"/>
            <xs:element ref="addAfter" minOccurs="0"/>
            <xs:element ref="dataType"/>
            <xs:element ref="elementTmpl"/>
            <xs:element ref="visible"/>
            <xs:element ref="disabled"/>
            <xs:element name="notice" type="translatableString">
                <xs:annotation>
                    <xs:documentation>
                        Message that is displayed beneath the field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="focused" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Is responsible for initial component focused state.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tooltipTpl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The path to the tooltip .html template.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="fallbackResetTpl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>
                        The path to the fallback reset (restore to default button) ".html" template.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="placeholder" type="translatableString">
                <xs:annotation>
                    <xs:documentation>
                        Value displayed when the field is empty.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="labelVisible" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Is responsible for label rendering.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="showFallbackReset" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>
                        Is responsible for fallback reset ("restore to default" button) rendering.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="validation" type="validationType">
                <xs:annotation>
                    <xs:documentation>
                        Validation rules.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="switcherConfig" type="switcherConfigType">
                <xs:annotation>
                    <xs:documentation>
                        Configuration of subscribtion to a property change of the component that is declared
                        as "target" setting.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tooltip">
                <xs:annotation>
                    <xs:documentation>
                        A definition for the message which appears when a cursor is positioned over an icon.
                    </xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:choice minOccurs="1" maxOccurs="unbounded">
                        <xs:element name="link" type="xs:string"/>
                        <xs:element name="description" type="translatableString"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:group>
</xs:schema>
