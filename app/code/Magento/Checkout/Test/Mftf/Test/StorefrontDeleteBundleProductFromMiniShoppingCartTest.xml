<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontDeleteBundleProductFromMiniShoppingCartTest">
        <annotations>
            <stories value="DeleteBundleProduct"/>
            <title value="Storefront Delete Bundle Product From Mini Shopping Cart Test"/>
            <description value="Test log in to Shopping Cart and Delete Bundle Product From Mini Shopping Cart Test"/>
            <testCaseId value="MC-14682"/>
            <severity value="CRITICAL"/>
            <group value="Shopping Cart"/>
            <group value="mtf_migrated"/>
            <group value="cloud"/>
        </annotations>

        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="LoginAsAdmin"/>
            <magentoCLI command="config:set {{EnableFlatRateConfigData.path}} {{EnableFlatRateConfigData.value}}" stepKey="enableFlatRate"/>
            <magentoCLI command="config:set {{EnableFlatRateDefaultPriceConfigData.path}} {{EnableFlatRateDefaultPriceConfigData.value}}" stepKey="enableFlatRateDefaultPrice"/>
            <createData entity="SimpleSubCategory" stepKey="createSubCategory"/>
            <!--Create  simple product-->
            <createData entity="SimpleProduct2" stepKey="simpleProduct1">
                <field key="price">10.00</field>
            </createData>
            <!--Create Bundle product-->
            <createData entity="BundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="createSubCategory"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="createBundleOption1_1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="required">True</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct1"/>
            </createData>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindex">
                <argument name="indices" value="cataloginventory_stock"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="createBundleProduct" stepKey="deleteBundleProduct"/>
            <deleteData createDataKey="createSubCategory" stepKey="deleteCategory"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!--Open Product page in StoreFront -->
        <actionGroup ref="AssertProductNameAndSkuInStorefrontProductPageByCustomAttributeUrlKeyActionGroup" stepKey="openProductPageAndVerifyProduct">
            <argument name="product" value="$$createBundleProduct$$"/>
        </actionGroup>

        <!-- Click on customize And Add To Cart Button -->
        <actionGroup ref="StorefrontSelectCustomizeAndAddToTheCartButtonActionGroup" stepKey="clickOnCustomizeAndAddtoCartButton"/>

        <!-- Select Product Quantity and add to the cart -->
        <actionGroup ref="StorefrontEnterProductQuantityAndAddToTheCartActionGroup" stepKey="enterProductQuantityAndAddToTheCart">
            <argument name="quantity" value="1"/>
        </actionGroup>
        <scrollToTopOfPage stepKey="scrollToTop"/>
        <waitForPageLoad stepKey="waitForMiniCartPanelToAppear"/>

        <!-- Assert Product in Mini Cart -->
        <actionGroup ref="StorefrontClickOnMiniCartActionGroup" stepKey="clickOnMiniCart"/>
        <actionGroup ref="AssertStorefrontMiniCartItemsActionGroup" stepKey="assertSimpleProduct3MiniCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
            <argument name="productPrice" value="$10.00"/>
            <argument name="cartSubtotal" value="$10.00" />
            <argument name="qty" value="1"/>
        </actionGroup>

        <!-- Select Mini Cart and select 'View And Edit Cart' -->
        <actionGroup ref="AssertOneProductNameInMiniCartActionGroup" stepKey="seeProductInMiniCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
        </actionGroup>

        <!--Remove an item from the cart using minicart-->
        <actionGroup ref="RemoveProductFromMiniCartActionGroup" stepKey="removeProductFromMiniCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="ReloadPageActionGroup" stepKey="reloadPage"/>

        <!--Check the minicart is empty and verify AssertProductAbsentInMiniShoppingCart-->
        <actionGroup ref="AssertMiniCartEmptyActionGroup" stepKey="miniCartEnpty"/>
        <dontSee selector="{{StorefrontMinicartSection.productLinkByName($$createBundleProduct.name$$)}}" stepKey="verifyAssertProductAbsentInMiniShoppingCart"/>
    </test>
</tests>
