<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontEditBundleProductTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Bundle products list on Storefront"/>
            <title value="Customer should be able to change chosen options for Bundle Product when clicking Edit button in Shopping Cart page"/>
            <description value="Customer should be able to change chosen options for Bundle Product when clicking Edit button in Shopping Cart page"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-290"/>
            <group value="Bundle"/>
            <group value="cloud"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndex">
                <argument name="indices" value=""/>
            </actionGroup>
        </before>
        <after>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="amOnLogoutPage"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
        </after>

        <!-- Create a bundle product -->
        <actionGroup ref="AdminOpenProductIndexPageActionGroup" stepKey="visitAdminProductPageBundle"/>
        <actionGroup ref="GoToCreateProductPageActionGroup" stepKey="goToCreateBundleProduct">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

        <actionGroup ref="FillProductNameAndSkuInProductFormActionGroup" stepKey="fillBundleProductNameAndSku">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

         <!--Add two bundle items-->
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems"/>
        <scrollTo stepKey="scrollToBundleItems" selector="{{AdminProductFormBundleSection.bundledItems}}"/>
        <actionGroup ref="AdminClickAddOptionForBundleItemsActionGroup" stepKey="clickAddOption3"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" stepKey="waitForBundleOptions"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" userInput="{{BundleProduct.optionTitle1}}" stepKey="fillOptionTitle"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundleOptionXInputType('0')}}" userInput="{{BundleProduct.optionInputType1}}" stepKey="selectInputType"/>
        <actionGroup ref="AdminClickAddProductToOptionActionGroup" stepKey="clickAddProductsToOption"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct1$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow"/>
        <actionGroup ref="FilterProductGridBySkuActionGroup" stepKey="filterBundleProductOptions2">
            <argument name="product" value="$$simpleProduct2$$"/>
        </actionGroup>
        <actionGroup ref="AdminCheckFirstCheckboxInAddProductsToOptionPanelGridActionGroup" stepKey="selectFirstGridRow2"/>
        <click selector="{{AdminAddProductsToOptionPanel.addSelectedProducts}}" stepKey="clickAddSelectedBundleProducts"/>
        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty1">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="0"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>

        <actionGroup ref="AdminFillBundleItemQtyActionGroup" stepKey="fillProductDefaultQty2">
            <argument name="optionIndex" value="0"/>
            <argument name="productIndex" value="1"/>
            <argument name="qty" value="{{BundleProduct.defaultQuantity}}"/>
        </actionGroup>

        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="saveProductBundle"/>
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="assertSuccess">
            <argument name="message" value="You saved the product."/>
        </actionGroup>

        <actionGroup ref="CliIndexerReindexActionGroup" stepKey="runCronIndexer">
            <argument name="indices" value=""/>
        </actionGroup>

        <!-- Go to the storefront bundled product page -->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="visitStoreFrontBundle">
            <argument name="productUrl" value="{{BundleProduct.urlKey}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForStorefront"/>
        <click stepKey="customizeAndAddToCart" selector="{{StorefrontBundledSection.addToCart}}"/>
        <waitForPageLoad stepKey="waitCustomizableOptionsPopUp"/>

        <!-- add two products to the shopping cart, each with one different option -->
        <click stepKey="selectFirstBundleOption" selector="{{StorefrontBundledSection.nthBundledOption('1','1')}}"/>
        <waitForPageLoad stepKey="waitForPriceUpdate"/>
        <see stepKey="seeSinglePrice" selector="{{StorefrontBundledSection.configuredPrice}}" userInput="1,230.00"/>
        <click stepKey="addFirstItemToCart" selector="{{StorefrontBundledSection.addToCartConfigured}}"/>
        <waitForPageLoad stepKey="waitForElementAdded"/>

        <click stepKey="unselectFirstBundleOption" selector="{{StorefrontBundledSection.nthBundledOption('1','1')}}"/>
        <click stepKey="selectSecondBundleOption" selector="{{StorefrontBundledSection.nthBundledOption('1','2')}}"/>
        <waitForPageLoad stepKey="waitForPriceUpdate2"/>
        <see stepKey="seeSinglePrice2" selector="{{StorefrontBundledSection.configuredPrice}}" userInput="1,230.00"/>
        <click stepKey="addSecondItemToCart" selector="{{StorefrontBundledSection.addToCartConfigured}}"/>
        <waitForPageLoad stepKey="waitForElementAdded2"/>

        <!-- Go to the shopping cart page and edit the first product -->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="onPageShoppingCart"/>
        <waitForElementVisible stepKey="waitForInfoDropdown" selector="{{CheckoutCartSummarySection.total}}"/>
        <waitForPageLoad stepKey="waitForCartPageLoad3"/>
        <grabTextFrom selector="{{CheckoutCartSummarySection.total}}" stepKey="grabTotalBefore"/>
        <actionGroup ref="StorefrontUpdateCartItemEditParametersProductActionGroup" stepKey="clickEdit">
            <argument name="rowNumber" value="1"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForStorefront2"/>
        <!-- Check second one option to choose both of the options on the storefront -->
        <click selector="{{StorefrontBundledSection.nthBundledOption('1','2')}}" stepKey="selectSecondBundleOption2"/>

        <waitForPageLoad stepKey="waitForPriceUpdate3"/>
        <see stepKey="seeDoublePrice" selector="{{StorefrontBundledSection.configuredPrice}}" userInput="2,460.00"/>

        <click stepKey="addFirstItemToCart2" selector="{{StorefrontBundledSection.updateCart}}"/>
        <waitForPageLoad stepKey="waitForElementAdded3"/>

        <!-- Go to the shopping cart page -->
        <actionGroup ref="StorefrontCartPageOpenActionGroup" stepKey="onPageShoppingCart2"/>

        <!-- Assert that the options are both there and the proce no longer matches -->
        <see stepKey="assertBothOptions" selector="{{CheckoutCartProductSection.nthItemOption('2')}}" userInput="$$simpleProduct1.name$$"/>
        <see stepKey="assertBothOptions2" selector="{{CheckoutCartProductSection.nthItemOption('2')}}" userInput="$$simpleProduct2.name$$"/>
        <waitForElementVisible stepKey="waitForInfoDropdown2" selector="{{CheckoutCartSummarySection.total}}"/>
        <waitForPageLoad stepKey="waitForCartPageLoad4"/>
        <grabTextFrom selector="{{CheckoutCartSummarySection.total}}" stepKey="grabTotalAfter"/>
        <assertNotEquals stepKey="assertNotEquals">
			<actualResult type="string">{$grabTotalAfter}</actualResult>
			<expectedResult type="string">{$grabTotalBefore}</expectedResult>
        </assertNotEquals>

        <!-- Delete the bundled product -->
        <actionGroup stepKey="deleteBundle" ref="DeleteProductUsingProductGridActionGroup">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>
        <actionGroup ref="ResetAdminDataGridToDefaultViewActionGroup" stepKey="clearFilters"/>
    </test>
</tests>
