<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminExportGroupedProductWithSpecialPriceTest">
        <annotations>
            <features value="CatalogImportExport"/>
            <stories value="Export Products"/>
            <title value="Export Grouped Products with Special Price"/>
            <description value="Verifies that a user can export a Grouped product with a special price and Simple child
            products. Verifies that exported file and the downloadable copy of the exported file contain the expected
            products. Note that MFTF cannot simply download a file and have access to it due to the test not having
            access to the server that is running the test browser. Therefore, this test verifies that the Download
            button can be successfully clicked, grabs the request URL from the Download button, executes the request on
            the magento machine via a curl request, and verifies the contents of the downloaded file."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-14009"/>
            <group value="catalog_import_export"/>
            <group value="mtf_migrated"/>
            <group value="pr_exclude"/>
        </annotations>

        <before>
            <!-- Create first simple product and add special price  -->
            <createData entity="SimpleProduct2" stepKey="createFirstSimpleProduct"/>
            <createData entity="specialProductPrice2" stepKey="specialPriceToFirstProduct">
                <requiredEntity createDataKey="createFirstSimpleProduct"/>
            </createData>

             <!-- Create second simple product and add special price-->
            <createData entity="SimpleProduct2" stepKey="createSecondSimpleProduct"/>
            <createData entity="specialProductPrice2" stepKey="specialPriceToSecondProduct">
                <requiredEntity createDataKey="createSecondSimpleProduct"/>
            </createData>

            <!-- Create category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>

            <!-- Create group product with created below simple products -->
            <createData entity="ApiGroupedProduct2" stepKey="createGroupedProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <createData entity="OneSimpleProductLink" stepKey="addFirstProduct">
                <requiredEntity createDataKey="createGroupedProduct"/>
                <requiredEntity createDataKey="createFirstSimpleProduct"/>
            </createData>
            <updateData entity="OneMoreSimpleProductLink" createDataKey="addFirstProduct" stepKey="addSecondProduct">
                <requiredEntity createDataKey="createGroupedProduct"/>
                <requiredEntity createDataKey="createSecondSimpleProduct"/>
            </updateData>

            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
        </before>

        <after>
            <!-- Delete Data & Reindex -->
            <deleteData createDataKey="createFirstSimpleProduct" stepKey="deleteFirstSimpleProduct"/>
            <deleteData createDataKey="createSecondSimpleProduct" stepKey="deleteSecondSimpleProduct"/>
            <deleteData createDataKey="createGroupedProduct" stepKey="deleteGroupedProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <helper class="\Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="deleteDirectory" stepKey="deleteExportFileDirectory">
                <argument name="path">var/export</argument>
            </helper>
            <actionGroup ref="CliIndexerReindexActionGroup" stepKey="reindexInvalidatedIndices">
                <argument name="indices" value=""/>
            </actionGroup>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Export Created Products -->
        <actionGroup ref="AdminNavigateToExportPageActionGroup" stepKey="goToExportIndexPage"/>
        <comment userInput="BIC workaround" stepKey="waitForExportIndexPageLoad"/>
        <actionGroup ref="ExportAllProductsActionGroup" stepKey="exportCreatedProducts"/>

        <!-- Start Message Queue for Export Consumer -->
        <actionGroup ref="CliConsumerStartActionGroup" stepKey="startMessageQueue">
            <argument name="consumerName" value="{{AdminExportMessageConsumerData.consumerName}}"/>
            <argument name="maxMessages" value="{{AdminExportMessageConsumerData.messageLimit}}"/>
        </actionGroup>
        <actionGroup ref="ReloadPageActionGroup" stepKey="refreshPage"/>
        <comment userInput="Replacing reload action and preserve Backward Compatibility" stepKey="waitForReload"/>
        <waitForElementVisible selector="{{AdminExportAttributeSection.exportFileNameByPosition('0')}}" stepKey="waitForFileName"/>
        <grabTextFrom selector="{{AdminExportAttributeSection.exportFileNameByPosition('0')}}" stepKey="getFilename"/>
        <actionGroup ref="AdminGetExportFilenameOnServerActionGroup" stepKey="grabNameFile">
            <argument name="rowIndex" value="0"/>
        </actionGroup>

        <!-- Validate Export File on File System: Grouped Product with Special Price -->
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileExists" stepKey="assertExportFileExists">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFirstSimpleProduct">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
            <argument name="text">$$createFirstSimpleProduct.name$$</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsSecondSimpleProduct">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
            <argument name="text">$$createSecondSimpleProduct.name$$</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsGroupedProduct">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
            <argument name="text">$$createGroupedProduct.name$$</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsFirstChildGroupedProduct">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
            <argument name="text">$$createFirstSimpleProduct.sku$$=$$createFirstSimpleProduct.quantity$$</argument>
        </helper>
        <helper class="Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileContainsString" stepKey="assertExportFileContainsSecondChildGroupedProduct">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
            <argument name="text">$$createSecondSimpleProduct.sku$$=$$createSecondSimpleProduct.quantity$$</argument>
        </helper>

        <!-- Download Export File -->
        <actionGroup ref="DownloadFileActionGroup" stepKey="downloadCreatedProducts">
            <argument name="fileName" value="{$getFilename}"/>
        </actionGroup>

        <!-- Validate Downloaded Export File: Grouped Product with Special Price -->
        <grabAttributeFrom userInput="href" selector="{{AdminExportAttributeSection.download('0')}}" stepKey="grabExportUrl"/>
        <helper class="\Magento\Backend\Test\Mftf\Helper\CurlHelpers" method="assertCurlResponseContainsString" stepKey="assertDownloadFileContainsFirstSimpleProduct">
            <argument name="url">{$grabExportUrl}</argument>
            <argument name="expectedString">$$createFirstSimpleProduct.name$$</argument>
        </helper>
        <helper class="\Magento\Backend\Test\Mftf\Helper\CurlHelpers" method="assertCurlResponseContainsString" stepKey="assertDownloadFileContainsSecondSimpleProduct">
            <argument name="url">{$grabExportUrl}</argument>
            <argument name="expectedString">$$createSecondSimpleProduct.name$$</argument>
        </helper>
        <helper class="\Magento\Backend\Test\Mftf\Helper\CurlHelpers" method="assertCurlResponseContainsString" stepKey="assertDownloadFileContainsGroupedProduct">
            <argument name="url">{$grabExportUrl}</argument>
            <argument name="expectedString">$$createGroupedProduct.name$$</argument>
        </helper>
        <helper class="\Magento\Backend\Test\Mftf\Helper\CurlHelpers" method="assertCurlResponseContainsString" stepKey="assertDownloadFileContainsFirstChildGroupedProduct">
            <argument name="url">{$grabExportUrl}</argument>
            <argument name="expectedString">$$createFirstSimpleProduct.sku$$=$$createFirstSimpleProduct.quantity$$</argument>
        </helper>
        <helper class="\Magento\Backend\Test\Mftf\Helper\CurlHelpers" method="assertCurlResponseContainsString" stepKey="assertDownloadFileContainsSecondChildGroupedProduct">
            <argument name="url">{$grabExportUrl}</argument>
            <argument name="expectedString">$$createSecondSimpleProduct.sku$$=$$createSecondSimpleProduct.quantity$$</argument>
        </helper>

        <!-- Delete Export File -->
        <actionGroup ref="DeleteExportedFileActionGroup" stepKey="deleteExportedFile">
            <argument name="fileName" value="{$getFilename}"/>
        </actionGroup>
        <helper class="\Magento\Catalog\Test\Mftf\Helper\LocalFileAssertions" method="assertFileDoesNotExist" stepKey="assertExportFileDeleted">
            <argument name="filePath">var/export/{$grabNameFile}</argument>
        </helper>
    </test>
</tests>
